/**
 * Script de prueba para verificar que las operaciones CRUD funcionan correctamente
 * despu√©s de los cambios de query parameters
 */

const API_BASE = 'https://api-delizia.vercel.app/api';

console.log('üß™ Probando operaciones CRUD con query parameters');
console.log('=' .repeat(60));

async function testCRUD() {
  try {
    console.log('\n1Ô∏è‚É£ Probando GET empleados...');
    const getResponse = await fetch(`${API_BASE}/empleados`);
    const empleados = await getResponse.json();
    
    if (empleados.success && empleados.data.length > 0) {
      const empleado = empleados.data[0];
      console.log(`‚úÖ GET empleados: ${empleados.count} encontrados`);
      console.log(`üë§ Primer empleado: ${empleado.nombre} (ID: ${empleado._id})`);
      
      console.log('\n2Ô∏è‚É£ Probando GET empleado por ID...');
      const getByIdResponse = await fetch(`${API_BASE}/empleados?id=${empleado._id}`);
      const empleadoById = await getByIdResponse.json();
      
      if (empleadoById.success) {
        console.log(`‚úÖ GET empleado por ID: ${empleadoById.data.nombre}`);
        
        console.log('\n3Ô∏è‚É£ Probando PUT actualizaci√≥n...');
        const updateData = {
          nombre: empleado.nombre + ' - UPDATED',
          cargo: 'CARGO ACTUALIZADO'
        };
        
        const putResponse = await fetch(`${API_BASE}/empleados?id=${empleado._id}`, {
          method: 'PUT',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(updateData)
        });
        
        const updateResult = await putResponse.json();
        
        if (updateResult.success) {
          console.log(`‚úÖ PUT actualizaci√≥n: ${updateResult.data.nombre}`);
          console.log(`üìù Cargo actualizado: ${updateResult.data.cargo}`);
        } else {
          console.error(`‚ùå PUT fall√≥:`, updateResult);
        }
        
      } else {
        console.error(`‚ùå GET por ID fall√≥:`, empleadoById);
      }
      
    } else {
      console.error(`‚ùå GET empleados fall√≥:`, empleados);
    }
    
    console.log('\n4Ô∏è‚É£ Probando GET evaluaciones...');
    const evalResponse = await fetch(`${API_BASE}/evaluaciones`);
    const evaluaciones = await evalResponse.json();
    
    if (evaluaciones.success) {
      console.log(`‚úÖ GET evaluaciones: ${evaluaciones.count} encontradas`);
    } else {
      console.error(`‚ùå GET evaluaciones fall√≥:`, evaluaciones);
    }
    
    console.log('\nüìã RESUMEN:');
    console.log('‚úÖ Operaciones CRUD con query parameters funcionando');
    console.log('‚úÖ Frontend actualizado para usar query parameters');
    console.log('‚úÖ API respondiendo correctamente');
    
  } catch (error) {
    console.error('‚ùå Error durante las pruebas:', error.message);
  }
}

testCRUD();
